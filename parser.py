from pandas import DataFrame, read_csv

import matplotlib.pyplot as plt
import pandas as pd

file_name = "absentee_20161108.csv"

def parse_all(file):
    with open(file, encoding="latin1") as f:
        df = pd.read_csv(f)

    # headers = df.columns.values
    # for i in range(len(headers)):
    #     print(f"{i+1} {headers[i]}")

    data = {}
    party_count = {}

    for i in range(len(df.index)):
        # county = df.iloc[i,0]
        county = df.loc[i,'county_desc']
        # party = df.iloc[i,28]
        party = df.loc[i,'ballot_request_party']
        # approval = df.iloc[i,32]
        approval = df.loc[i,'ballot_rtn_status']

        if party_count.get(county) != None:
            party_count[county][party] = party_count[county].get(party,0) + 1
        else:
            party_count[county] = {party : 1}

        if approval == "ACCEPTED":
            if data.get(county) != None:
                data[county][party] = data[county].get(party,0) + 1
            else:
                data[county] = {party : 1}

        # print(data)
        # print(party_count)
        # for county, parties in party_count.items():
        #     for party, total in parties.items():
        #         try:
        #             accepted = data[county][party]
        #         except:
        #             accepted = 0
                # print(f"{county}, {party}: {accepted/total * 100}% accepted")

    return (data, party_count)

def parse(file):
    with open(file, encoding='latin1') as f:
        df = pd.read_csv(f)

    data = {}
    party_count = {}

    for i in range(len(df.index)):
        county = df.loc[i,'county_desc']
        party = df.loc[i,'ballot_request_party']
        approval = df.loc[i,'ballot_rtn_status']
        request = df.loc[i,'ballot_req_type']

        # print(f"{county}, {party}, {approval}, {request}")

        if request == "MAIL":
            if party_count.get(county) != None:
                party_count[county][party] = party_count[county].get(party,0) + 1
            else:
                party_count[county] = {party : 1}

            if approval == "ACCEPTED":
                if data.get(county) != None:
                    data[county][party] = data[county].get(party,0) + 1
                else:
                    data[county] = {party : 1}

    return (data, party_count)
if __name__ == "__main__":
    # data, party_count = parse(file_name)

    # Data including one-stop absentee ballot requests

    # x = ['ALAMANCE', 'ALEXANDER', 'ALLEGHANY', 'ANSON', 'ASHE', 'AVERY', 'BEAUFORT', 'BERTIE', 'BLADEN', 'BRUNSWICK', 'BUNCOMBE', 'BURKE', 'CABARRUS', 'CALDWELL', 'CAMDEN', 'CARTERET', 'CASWELL', 'CATAWBA', 'CHATHAM', 'CHEROKEE', 'CHOWAN', 'CLAY', 'CLEVELAND', 'COLUMBUS', 'CRAVEN', 'CUMBERLAND', 'CURRITUCK', 'DARE', 'DAVIDSON', 'DAVIE', 'DUPLIN', 'DURHAM', 'EDGECOMBE', 'FORSYTH', 'FRANKLIN', 'GASTON', 'GATES', 'GRAHAM', 'GRANVILLE', 'GREENE', 'GUILFORD', 'HALIFAX', 'HARNETT', 'HAYWOOD', 'HENDERSON', 'HERTFORD', 'HOKE', 'HYDE', 'IREDELL', 'JACKSON', 'JOHNSTON', 'JONES', 'LEE', 'LENOIR', 'LINCOLN', 'MACON', 'MADISON', 'MARTIN', 'MCDOWELL', 'MECKLENBURG', 'MITCHELL', 'MONTGOMERY', 'MOORE', 'NASH', 'NEW HANOVER', 'NORTHAMPTON', 'ONSLOW', 'ORANGE', 'PAMLICO', 'PASQUOTANK', 'PENDER', 'PERQUIMANS', 'PERSON', 'PITT', 'POLK', 'RANDOLPH', 'RICHMOND', 'ROBESON', 'ROCKINGHAM', 'ROWAN', 'RUTHERFORD', 'SAMPSON', 'SCOTLAND', 'STANLY', 'STOKES', 'SURRY', 'SWAIN', 'TRANSYLVANIA', 'TYRRELL', 'UNION', 'VANCE', 'WAKE', 'WARREN', 'WASHINGTON', 'WATAUGA', 'WAYNE', 'WILKES', 'WILSON', 'YADKIN', 'YANCEY']
    # y_dem = [98.62516498020237, 98.43296575739988, 98.56850715746421, 98.09860711916869, 99.17139119058002, 98.32985386221294, 98.7345776652958, 99.12451361867704, 96.59976033553026, 98.41477703494382, 98.0974429127644, 99.17901695276682, 98.66061163485858, 98.84810320995238, 99.12451361867704, 98.51181343970543, 99.16876574307305, 98.89940737320096, 98.65467518953471, 97.99196787148594, 99.48514851485149, 98.94514767932489, 99.08199782168975, 98.56869009584665, 98.40177410721114, 98.45394593178146, 99.19484702093398, 98.9216944801027, 98.61628525811602, 99.18938835666913, 98.8432105356825, 98.65314989138305, 99.22791846819024, 97.8100298043281, 99.04751477994307, 98.67473605159695, 98.01488833746899, 99.00867410161091, 99.14764377388067, 98.24561403508771, 98.84196108174193, 98.4488792206564, 98.65311087938825, 98.94650591127238, 98.41503096462685, 99.16869424168694, 99.10175231924606, 97.05882352941177, 98.89636018126005, 98.9245318004821, 98.08327467648492, 99.30394431554525, 98.78837783790142, 98.90099990991803, 98.58344400177069, 99.14504716981132, 98.55119124275595, 99.32785660941, 99.20390344119157, 98.53512403648726, 98.52941176470588, 98.59560676989557, 97.97575909034111, 99.10714285714286, 98.0673246519308, 98.77902801053388, 98.63013698630137, 98.6653160936662, 98.06910569105692, 99.10009472687086, 98.59633569739952, 99.28767123287672, 99.30049548236666, 98.65786109927566, 98.49119865884325, 98.91513165329415, 99.19057086055098, 98.54308741475512, 98.91744328344159, 98.67320206202992, 98.4015984015984, 99.04761904761905, 99.22452660054103, 98.84678747940691, 99.03753609239654, 98.3405990718605, 99.29203539823008, 99.0088400750067, 99.09255898366605, 99.10071023453068, 99.34435854780311, 98.58775917429581, 98.49185602252162, 99.34426229508196, 98.97580525456434, 98.82864598434328, 98.53996535511013, 98.81656804733728, 99.07692307692308, 97.81199351701783]
    # y_rep = [98.17282321899737, 98.97812549896216, 98.64864864864865, 98.33729216152018, 98.59243040350329, 97.57085020242914, 98.84883940366107, 98.26388888888889, 98.06451612903226, 97.74703923019985, 97.33378974593032, 98.7109842555934, 98.01618864923034, 98.7939927184466, 97.96355841371918, 98.33725362965366, 97.79874213836479, 98.77681973130137, 98.02399435426959, 97.93952368209794, 99.14590747330962, 98.15848214285714, 98.33267561168114, 98.44444444444444, 98.4878808094285, 97.10249734837527, 98.39319470699432, 97.67908309455588, 98.46166077036213, 98.72013651877133, 97.92429792429792, 97.8256611165524, 98.2435129740519, 96.6189096515244, 98.74979704497483, 98.61192001553096, 97.53914988814317, 97.93322734499205, 98.5132382892057, 98.72389791183295, 98.0244830698003, 97.93061472915399, 98.0080027835769, 98.15431164901665, 98.02090674183698, 98.69281045751634, 97.50671269658612, 94.0677966101695, 98.5052065838092, 97.94913863822805, 97.77958415333276, 98.34254143646409, 98.89540904383846, 98.94119871431273, 98.47479058005374, 98.67179980750723, 98.63347974621767, 99.11426040744021, 98.75666074600356, 97.55876579252026, 98.80273660205245, 98.15645241654211, 97.78873449873001, 98.92269326683292, 97.48851681730628, 97.9633401221996, 97.9552495697074, 98.28975089850044, 98.1981981981982, 98.00601956358163, 98.59301118671434, 97.89132197891321, 98.99159663865547, 98.19446216664541, 98.39888618169161, 98.61710276982623, 98.3127572016461, 96.68508287292818, 98.2066151202749, 98.54366416169992, 97.4993988939649, 98.45393688237169, 97.97344514325647, 98.8116636708608, 98.56115107913669, 97.54666153550126, 98.4186046511628, 98.53760445682451, 98.63945578231292, 98.65574519093555, 98.51816443594646, 97.93551353526064, 96.82758620689656, 98.69281045751634, 98.28125, 98.49891225525744, 97.75220477522048, 98.4428806707591, 98.65717192268566, 97.2568578553616]
    # y_una = [98.02716367601863, 99.09168322452456, 99.46062567421791, 97.95180722891567, 98.07692307692307, 98.7012987012987, 98.54260089686099, 99.31584948688712, 93.60832404310665, 98.13260843871883, 97.82396788990826, 98.97694721047607, 98.3049670024314, 98.72122762148338, 98.74396135265701, 98.15502882767457, 98.10426540284361, 98.57309260337799, 97.98780487804878, 98.27666511411272, 98.97718332022029, 98.26771653543307, 98.55384615384615, 98.1198589894242, 98.1836642599278, 97.68472415853415, 98.0, 98.15096251266465, 98.40656687590536, 98.65374259558428, 98.19855884707766, 98.33216341429173, 98.71877001921845, 97.06376138596178, 98.85520457918169, 98.4268607654379, 96.29629629629629, 98.38998211091234, 98.55371900826447, 98.81422924901186, 98.25229992475181, 98.05097451274362, 97.83917271183824, 98.02224969097651, 98.13324315184309, 99.10941475826972, 98.35376532399299, 95.4954954954955, 98.43782985011612, 98.34392014519057, 97.75938347366919, 97.71929824561404, 98.57013163867452, 98.80046811000585, 98.58256555634301, 99.17241379310346, 98.38420107719928, 98.86792452830188, 98.8162496637073, 97.79631074198137, 98.19034852546918, 97.63440860215053, 97.54901960784314, 98.91901470848839, 97.6056398572841, 98.60759493670886, 98.154296875, 98.44577733023948, 98.11643835616438, 98.12992125984252, 98.46438482886217, 97.70867430441899, 98.80919412905013, 97.92999920992335, 97.90419161676647, 98.72535351523601, 98.75724937862469, 97.86024740889334, 98.4268125854993, 98.54253420582987, 97.73049645390071, 98.6140277194456, 98.90052356020942, 98.75052061640983, 98.49375459221162, 97.66212644846513, 98.27586206896551, 98.6248872858431, 98.48484848484848, 98.54618548990277, 98.51485148514851, 98.07576725141806, 96.72897196261682, 99.05362776025235, 99.01215805471124, 98.05618615209988, 98.60383944153578, 98.45147219193021, 98.58156028368793, 97.18562874251498]

    # Data considering only mail absentee ballot requests

    x = ['ALAMANCE', 'ALEXANDER', 'ALLEGHANY', 'ANSON', 'ASHE', 'AVERY', 'BEAUFORT', 'BERTIE', 'BLADEN', 'BRUNSWICK', 'BUNCOMBE', 'BURKE', 'CABARRUS', 'CALDWELL', 'CAMDEN', 'CARTERET', 'CASWELL', 'CATAWBA', 'CHATHAM', 'CHEROKEE', 'CHOWAN', 'CLAY', 'CLEVELAND', 'COLUMBUS', 'CRAVEN', 'CUMBERLAND', 'CURRITUCK', 'DARE', 'DAVIDSON', 'DAVIE', 'DUPLIN', 'DURHAM', 'EDGECOMBE', 'FORSYTH', 'FRANKLIN', 'GASTON', 'GATES', 'GRAHAM', 'GRANVILLE', 'GREENE', 'GUILFORD', 'HALIFAX', 'HARNETT', 'HAYWOOD', 'HENDERSON', 'HERTFORD', 'HOKE', 'HYDE', 'IREDELL', 'JACKSON', 'JOHNSTON', 'JONES', 'LEE', 'LENOIR', 'LINCOLN', 'MACON', 'MADISON', 'MARTIN', 'MCDOWELL', 'MECKLENBURG', 'MITCHELL', 'MONTGOMERY', 'MOORE', 'NASH', 'NEW HANOVER', 'NORTHAMPTON', 'ONSLOW', 'ORANGE', 'PAMLICO', 'PASQUOTANK', 'PENDER', 'PERQUIMANS', 'PERSON', 'PITT', 'POLK', 'RANDOLPH', 'RICHMOND', 'ROBESON', 'ROCKINGHAM', 'ROWAN', 'RUTHERFORD', 'SAMPSON', 'SCOTLAND', 'STANLY', 'STOKES', 'SURRY', 'SWAIN', 'TRANSYLVANIA', 'TYRRELL', 'UNION', 'VANCE', 'WAKE', 'WARREN', 'WASHINGTON', 'WATAUGA', 'WAYNE', 'WILKES', 'WILSON', 'YADKIN', 'YANCEY']
    y_dem = [78.36624775583483, 71.8562874251497, 77.01149425287356, 67.69911504424779, 89.3491124260355, 83.6734693877551, 73.38129496402878, 74.21875, 75.57870370370371, 74.22166874221668, 73.91168180394612, 83.65384615384616, 82.36196319018406, 78.6743515850144, 82.75862068965517, 77.51196172248804, 75.21367521367522, 79.60426179604262, 78.36835599505562, 76.47058823529412, 91.04477611940298, 86.8421052631579, 80.68833652007649, 72.75280898876404, 78.33333333333333, 69.45304437564499, 89.77272727272727, 88.14229249011858, 82.43398392652124, 84.55882352941177, 64.60674157303372, 76.5141134557413, 58.68544600938967, 78.69124042244772, 79.76878612716763, 74.06049495875344, 66.66666666666666, 85.36585365853658, 76.23456790123457, 83.23353293413174, 78.36784409257004, 66.19385342789597, 76.22950819672131, 81.99566160520607, 82.04819277108435, 78.16091954022988, 78.14814814814814, 69.6969696969697, 84.82532751091702, 82.11382113821138, 76.36887608069163, 85.96491228070175, 72.29916897506925, 74.7340425531915, 77.23970944309927, 90.32258064516128, 77.00534759358288, 83.84615384615385, 79.47019867549669, 81.3806903451726, 80.43478260869566, 78.88198757763976, 77.86998616874136, 76.01547388781431, 75.23267838676318, 73.03370786516854, 75.04520795660035, 82.83170835099618, 75.67567567567568, 75.0, 75.97765363128491, 77.19298245614034, 72.61904761904762, 67.25206611570248, 82.38341968911918, 79.12844036697247, 76.10619469026548, 68.12977099236642, 75.62814070351759, 83.9210155148096, 73.03664921465969, 75.0, 76.8361581920904, 72.13930348258707, 83.52941176470588, 77.13717693836978, 86.66666666666667, 85.23206751054853, 76.19047619047619, 82.90685772773797, 76.5625, 84.44607483492297, 71.68141592920354, 85.56701030927834, 85.38812785388129, 72.8395061728395, 80.13698630136986, 73.63013698630137, 82.08955223880598, 83.53658536585365]
    y_rep = [82.33376792698827, 83.5734870317003, 81.91489361702128, 80.3030303030303, 83.87096774193549, 83.26848249027238, 78.41726618705036, 78.04878048780488, 76.42857142857142, 70.15810276679841, 70.23914968999114, 80.12618296529969, 83.32000000000001, 77.28613569321534, 75.0, 75.0, 77.56410256410257, 80.09510869565217, 77.30263157894737, 81.35593220338984, 88.67924528301887, 77.7027027027027, 79.49400798934754, 77.14285714285715, 82.81535648994516, 70.2355460385439, 80.89887640449437, 80.27027027027027, 84.55675892498998, 80.3883495145631, 65.65656565656566, 76.46165527714503, 58.0952380952381, 80.68551007147498, 80.77994428969359, 82.34250221827861, 75.0, 82.25806451612904, 76.2541806020067, 78.26086956521739, 81.18530545971178, 69.81132075471697, 79.53488372093022, 77.27272727272727, 80.91647331786544, 76.0, 70.50691244239631, 80.0, 86.6043613707165, 74.70817120622569, 75.95870206489676, 75.51020408163265, 80.0, 80.60344827586206, 76.00502512562815, 85.80645161290322, 80.55555555555556, 87.65432098765432, 76.8166089965398, 84.60373548712772, 83.9080459770115, 81.86528497409327, 81.65717900063251, 82.95454545454545, 74.5353894820087, 76.92307692307693, 77.26913970007892, 79.93827160493827, 78.57142857142857, 77.33333333333333, 76.77419354838709, 72.22222222222221, 76.15894039735099, 66.33785450061652, 85.29411764705883, 79.0292470441817, 70.07299270072993, 66.92015209125475, 75.73872472783826, 84.59016393442623, 72.44318181818183, 70.12578616352201, 78.2258064516129, 78.33001988071571, 83.05400372439479, 76.71614100185529, 77.61194029850746, 83.33333333333334, 75.0, 82.78195488721805, 78.47222222222221, 85.61846689895471, 73.23943661971832, 80.95238095238095, 80.18348623853211, 74.49392712550608, 75.72463768115942, 79.95735607675905, 84.74178403755869, 75.82417582417582]
    y_una = [78.67403314917128, 86.42533936651584, 92.98245614035088, 70.58823529411765, 73.94366197183099, 87.36842105263159, 75.0, 83.87096774193549, 62.83185840707964, 71.34670487106017, 71.82429758607044, 83.49514563106796, 83.53825136612022, 75.98784194528876, 81.35593220338984, 72.92069632495163, 65.4320987654321, 78.82623705408515, 76.63438256658596, 81.28342245989305, 82.66666666666667, 77.89473684210526, 79.62529274004683, 68.53146853146853, 78.58156028368795, 70.88339222614842, 77.59562841530054, 84.78873239436619, 82.35294117647058, 82.70676691729322, 62.28070175438597, 77.6963776963777, 62.96296296296296, 77.34466588511137, 80.5668016194332, 76.50882079851439, 58.536585365853654, 80.55555555555556, 78.18181818181819, 73.80952380952381, 78.65754317367221, 71.32867132867133, 76.02230483271374, 74.16020671834626, 80.8327351040919, 81.81818181818183, 74.56647398843931, 75.0, 85.5072463768116, 72.55813953488372, 75.93984962406014, 60.60606060606061, 73.50427350427351, 76.11940298507463, 76.32850241545893, 90.22801302931596, 73.72262773722628, 84.48275862068965, 74.23312883435584, 81.55121252430165, 76.10619469026548, 75.3731343283582, 79.77736549165121, 81.49606299212599, 72.71325796505653, 81.48148148148148, 75.51020408163265, 82.28511530398322, 76.81159420289855, 73.83177570093457, 75.0, 70.2127659574468, 69.28571428571428, 60.29654036243822, 77.48917748917748, 79.60526315789474, 71.15384615384616, 67.5531914893617, 76.01078167115904, 82.84923928077455, 69.49152542372882, 74.19354838709677, 79.06976744186046, 76.01809954751131, 82.03883495145631, 73.50230414746544, 67.85714285714286, 82.08955223880598, 63.63636363636363, 79.97356245869133, 71.0, 84.44158075601375, 64.70588235294117, 83.87096774193549, 85.14851485148515, 68.54460093896714, 80.80000000000001, 76.27737226277372, 83.97435897435898, 74.01129943502825]

    # for county in party_count:
    #     x.append(county)
    #     y_dem.append(data[county].get("DEM",0)/party_count[county]["DEM"] * 100)
    #     y_rep.append(data[county].get("REP",0)/party_count[county]["REP"] * 100)
    #     y_una.append(data[county].get("UNA",0)/party_count[county]["UNA"] * 100)
    #
    # print(f"x: {x}")
    # print(f"y_dem: {y_dem}")
    # print(f"y_rep: {y_rep}")
    # print(f"y_una: {y_una}")

    fig = plt.figure(figsize=(10,20))
    ax = fig.add_subplot(111)

    ax.scatter(y_dem, x, c='b', label = "Dem")
    ax.scatter(y_rep, x, c='r', label = "Rep")
    ax.scatter(y_una, x, c='g', label = "UNA")

    plt.xlabel("Percent accepted returned absentee ballots", {"fontsize": 20}, labelpad=20)
    plt.ylabel("County", {"fontsize": 20})
    plt.title("Absentee Ballot Return Rates", {"fontsize": 30})

    ax.title.set_position([0.5,1.02])
    ax.tick_params(axis='y', which='major', pad=0)
    ax.tick_params(axis='x', which='major', pad=0)

    plt.legend()

    plt.grid(True, axis='both')
    plt.tight_layout()
    plt.savefig("fig6.png")
    # plt.show()
